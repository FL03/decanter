name: Rust

env:
  CARGO_TERM_COLOR: always

on:
  push:
    branches: [ main ]
    tags: [ nightly*,  v*.*.* ]
  release:
      types: [ created ]
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        target: [ native, wasm32-unknown-unknown, wasm32-wasi ]
        toolchain: [ stable, nightly ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: setup (langspace)
        run: |
          rustup update
          rustup default ${{ matrix.toolchain }}
      - name: configure toolchain target
        if: ${{ matrix.target != 'native' }} && ${{matrix.toolchain == 'nightly' }}
        run: rustup target add ${{ matrix.target }}
      - name: Build
        if: ${{ matrix.target == 'native' }}
        run: cargo build --all-features -r -v --workspace
      - name: Build (${{ matrix.target }})
        if: ${{ matrix.target != 'native' }}
        run: cargo build --all-features -r -v --workspace --target ${{ matrix.target }}
      - name: Cache build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/release
          key: ${{ matrix.toolchain }}-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Test
        run: cargo test --all-features -r -v --workspace

